<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="HomeBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>